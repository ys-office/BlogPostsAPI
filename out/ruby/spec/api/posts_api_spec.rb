=begin
#Blog Posts API

#This is an example API for blog posts using OpenApi Specification. --- Using this API you can retrieve blog posts, comments on each blog post and delete or update the posts. 

The version of the OpenAPI document: 1.0.0
Contact: amirm.lavasani@gmail.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PostsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PostsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PostsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PostsApi' do
    it 'should create an instance of PostsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PostsApi)
    end
  end

  # unit tests for posts_get
  # Return all the posts
  # Return all the posts that are in our blog.
  # @param [Hash] opts the optional parameters
  # @return [Array<Post>]
  describe 'posts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for posts_id_delete
  # Deletes a post
  # Deletes the post with id.
  # @param id The postId requested by user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'posts_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for posts_id_get
  # Return a post
  # Return a post with postId equals to id.
  # @param id The postId requested by user.
  # @param [Hash] opts the optional parameters
  # @return [Post]
  describe 'posts_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for posts_id_patch
  # Update a post
  # Update the post with id partially.
  # @param id The postId requested by user.
  # @param patch_post 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'posts_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for posts_id_put
  # Update a post
  # A  complete replacement of a post with id.
  # @param id The postId requested by user.
  # @param post 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'posts_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for posts_post
  # @param post 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'posts_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
