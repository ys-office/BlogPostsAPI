/**
 * Blog Posts API
 * This is an example API for blog posts using OpenApi Specification. --- Using this API you can retrieve blog posts, comments on each blog post and delete or update the posts. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: amirm.lavasani@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Comment from './model/Comment';
import PatchPost from './model/PatchPost';
import Post from './model/Post';
import CommentsApi from './api/CommentsApi';
import PostsApi from './api/PostsApi';


/**
* This_is_an_example_API_for_blog_posts_using_OpenApi_Specification____Using_this_API_you_can_retrieve_blog_posts_comments_on_each_blog_post_and_delete_or_update_the_posts_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BlogPostsApi = require('index'); // See note below*.
* var xxxSvc = new BlogPostsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BlogPostsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BlogPostsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BlogPostsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The PatchPost model constructor.
     * @property {module:model/PatchPost}
     */
    PatchPost,

    /**
     * The Post model constructor.
     * @property {module:model/Post}
     */
    Post,

    /**
    * The CommentsApi service constructor.
    * @property {module:api/CommentsApi}
    */
    CommentsApi,

    /**
    * The PostsApi service constructor.
    * @property {module:api/PostsApi}
    */
    PostsApi
};
